# QC and build 
name: QC and Build

on:
  push:
    branches: [ main ]

  workflow_dispatch:


jobs:

  quality_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Check all .md files have trailing whitespace
        run: echo find a script to confirm all .md files have trailing whitespace
      
  generate_version_number:
    runs-on: ubuntu-latest
    needs: quality_check
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          bump_each_commit: false

  create_pdfs:
    runs-on: ubuntu-latest
    needs: generate_version_number
    steps:
      - uses: actions/checkout@v2
      - name: Install frontmatter, pandoc and LaTeX
        run: | 
          sudo pip install python-frontmatter
          sudo apt install pandoc
          sudo apt-get install texlive-xetex
      - name: Create PDF 
        run: | 
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/groundschool' -c
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/flying' -c 
      - run: |	
          mkdir -p ${{ github.workspace }}/artifact
          mv ${{ github.workspace }}/groundschool/book.pdf ${{ github.workspace }}/artifact/groundschool.pdf
          mv ${{ github.workspace }}/flying/book.pdf ${{ github.workspace }}/artifact/flying.pdf
      - uses: actions/upload-artifact@v2
        with:
          name: PDFs
          path: ${{ github.workspace }}/artifact/**/*
          
  send_notification_email:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: ~/artifacts/
          
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ~/artifacts/
        
#      - name: Send mail
#         uses: dawidd6/action-send-mail@v3
#         with:
#           # Required mail server address:
#           server_address: smtp.mailtrap.io
#           # Required mail server port:
#           server_port: 587
#           # Optional (recommended): mail server username:
#           username: 1cd7d3138a7713
#           # Optional (recommended) mail server password:
#           password: 12e3d9b8934391
#           # Required mail subject:
#           subject: New Courseware Release 
#           # Required recipients' addresses:
#           to: conneradlington+72student@gmail.com
#           # Required sender full name (address can be skipped):
#           from: 72(F) Sqn
#           # Optional whether this connection use TLS (default is true if server_port is 465)
#           # secure: true
#           # Optional plain body:
#           body: A new set of courseware has been released.
#           # Optional HTML body read from file:
#           # html_body: file://README.html
#           # Optional carbon copy recipients:
#           # cc: kyloren@example.com,leia@example.com
#           # Optional blind carbon copy recipients:
#           # bcc: r2d2@example.com,hansolo@example.com
#           # Optional recipient of the email response:
#           # reply_to: luke@example.com
#           # Optional unsigned/invalid certificates allowance:
#           # ignore_cert: true
#           # Optional converting Markdown to HTML (set content_type to text/html too):
#           # convert_markdown: true
#           # Optional attachments:
#           attachments: ${{ github.workspace }}/artifact/*.pdf
#           # Optional priority: 'high', 'normal' (default) or 'low'
#           priority: normal

  create_release:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
    
    - uses: actions/download-artifact@v2
      with:
        path: ~/artifacts/
    
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.generate_version_number.output.version }}
        tag_name: ${{ needs.generate_version_number.output.version }}
        files: ~/artifacts/*.pdf
    
      
#   create_and_send: 
#     runs-on: ubuntu-latest
#     needs: quality_check

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
        
#       - name: Install frontmatter, pandoc and LaTeX
#         run: sudo pip install python-frontmatter && sudo apt install pandoc && sudo apt-get install texlive-xetex
               
#       - name: Create PDF 
#         run: | 
#             python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/groundschool' -c
#             python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/flying' -c 
#       - run: |	
#           mkdir -p ${{ github.workspace }}/artifact
#           mv ${{ github.workspace }}/groundschool/book.pdf ${{ github.workspace }}/artifact/groundschool.pdf
#           mv ${{ github.workspace }}/flying/book.pdf ${{ github.workspace }}/artifact/flying.pdf
        
# #       - uses: actions/upload-artifact@v2
# #         with:
# #          name: PDFs
# #          path: ${{ github.workspace }}/artifact/**/*       
         
# #       - name: Send mail
# #         uses: dawidd6/action-send-mail@v3
# #         with:
# #           # Required mail server address:
# #           server_address: smtp.mailtrap.io
# #           # Required mail server port:
# #           server_port: 587
# #           # Optional (recommended): mail server username:
# #           username: 1cd7d3138a7713
# #           # Optional (recommended) mail server password:
# #           password: 12e3d9b8934391
# #           # Required mail subject:
# #           subject: New Courseware Release 
# #           # Required recipients' addresses:
# #           to: conneradlington+72student@gmail.com
# #           # Required sender full name (address can be skipped):
# #           from: 72(F) Sqn
# #           # Optional whether this connection use TLS (default is true if server_port is 465)
# #           # secure: true
# #           # Optional plain body:
# #           body: A new set of courseware has been released.
# #           # Optional HTML body read from file:
# #           # html_body: file://README.html
# #           # Optional carbon copy recipients:
# #           # cc: kyloren@example.com,leia@example.com
# #           # Optional blind carbon copy recipients:
# #           # bcc: r2d2@example.com,hansolo@example.com
# #           # Optional recipient of the email response:
# #           # reply_to: luke@example.com
# #           # Optional unsigned/invalid certificates allowance:
# #           # ignore_cert: true
# #           # Optional converting Markdown to HTML (set content_type to text/html too):
# #           # convert_markdown: true
# #           # Optional attachments:
# #           attachments: ${{ github.workspace }}/artifact/*.pdf
# #           # Optional priority: 'high', 'normal' (default) or 'low'
# #           priority: normal
          
          
#   release:

#       name: Release
#       needs: create_and_send
#       runs-on: ubuntu-latest
#       steps:
#       - name: Checkout 
#         uses: actions/checkout@v2
#         with: 
#           fetch-depth: 0
#       - name: Version
#         id: version
#         uses: paulhatch/semantic-version@v4.0.2
#         with:
#           # The prefix to use to identify tags
#           tag_prefix: "v"
#           # A string which, if present in a git commit, indicates that a change represents a
#           # major (breaking) change, supports regular expressions wrapped with '/'
#           major_pattern: "(MAJOR)"
#           # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
#           minor_pattern: "(MINOR)"
#           # A string to determine the format of the version output
#           format: "${major}.${minor}.${patch}"
#           # Optional path to check for changes. If any changes are detected in the path the
#           # 'changed' output will true. Enter multiple paths separated by spaces.
#           # change_path: "src/my-service"
#           # Named version, will be used as suffix for name version tag
#           # namespace: project-b
#           # Indicate whether short tags like 'v1' should be supported. If false only full
#           # tags like 'v1.0.0' will be recognized.
#           # short_tags: true
#           # If this is set to true, *every* commit will be treated as a new version.
#           bump_each_commit: false

#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           name: ${{ steps.version.outputs.version }}
#           tag_name: ${{ steps.version.outputs.version }}
# #          draft: true
#           files: |
#             ${{ github.workspace }}/artifact/*.pdf

