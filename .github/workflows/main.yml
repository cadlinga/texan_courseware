# QC and build 
name: QC and Build

on:
  push:
    branches: [ main ]

  workflow_dispatch:


jobs:

  quality_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Check all .md files have trailing whitespace
        run: echo find a script to confirm all .md files have trailing whitespace
      
  generate_version_number:
    runs-on: ubuntu-latest
    needs: quality_check
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          bump_each_commit: false

  create_pdfs:
    runs-on: ubuntu-latest
    needs: generate_version_number
    steps:
      - uses: actions/checkout@v2
      - name: Install frontmatter, pandoc and LaTeX
        run: | 
          sudo pip install python-frontmatter
          sudo apt install pandoc
          sudo apt-get install texlive-xetex
      - name: Create PDF 
        run: | 
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/groundschool' -c
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/flying' -c 
      - run: |	
          mkdir -p ${{ github.workspace }}/artifact
          mv ${{ github.workspace }}/groundschool/book.pdf ${{ github.workspace }}/artifact/groundschool.pdf
          mv ${{ github.workspace }}/flying/book.pdf ${{ github.workspace }}/artifact/flying.pdf
      - uses: actions/upload-artifact@v2
        with:
          name: PDFs
          path: ${{ github.workspace }}/artifact/**/*
          
  send_notification_email:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts/
          
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts/
   
  create_release:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
      
    - uses: actions/download-artifact@v2
      with:
        path: artifacts/
    
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.generate_version_number.output.version }}
        tag_name: ${{ needs.generate_version_number.outputs.version }}
        files: artifacts/*.pdf
    
