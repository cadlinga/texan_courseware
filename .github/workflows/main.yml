# QC and build 
name: QC and Build

on:
  push:

  workflow_dispatch:


jobs:

  quality_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Check all .md files have trailing whitespace
        run: |
         echo "Checking Groundschool for whitespace..." 
         python3 $GITHUB_WORKSPACE'/whitespace.py' -p $GITHUB_WORKSPACE'/groundschool'
         echo "Checking Flying for whitespace..." 
         python3 $GITHUB_WORKSPACE'/whitespace.py' -p $GITHUB_WORKSPACE'/flying'
      
  generate_version_number:
    runs-on: ubuntu-latest
    needs: quality_check
    if: success() && github.ref == 'refs/heads/main'
    outputs:
      version: v${{ steps.version.outputs.version }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Version
        id: version
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}"
          bump_each_commit: true

  create_pdfs:
    runs-on: ubuntu-latest
    needs: generate_version_number
    outputs:
      version: ${{ needs.generate_version_number.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Install frontmatter, pandoc and LaTeX
        run: | 
          sudo pip install python-frontmatter
          sudo apt install pandoc
          sudo apt-get install texlive-xetex
          
      - name: Add Version 
        run: "echo -e '---\nauthor: ${{needs.generate_version_number.outputs.version}}\nlanguage: en-UK\n---' > $GITHUB_WORKSPACE/title.txt"
      - name: Create PDF 
        run: | 
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/groundschool' -c
            python3 $GITHUB_WORKSPACE'/export_book.py' -p $GITHUB_WORKSPACE'/flying' -c 
      - run: |	
          mkdir -p ${{ github.workspace }}/artifact
          mv ${{ github.workspace }}/groundschool/book.pdf ${{ github.workspace }}/artifact/groundschool.pdf
          mv ${{ github.workspace }}/flying/book.pdf ${{ github.workspace }}/artifact/flying.pdf
      - uses: actions/upload-artifact@v2
        with:
          name: PDFs
          path: ${{ github.workspace }}/artifact/**/*
          
  send_notification_email:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts/
          
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: artifacts/
        
      - name: Send the email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.mailtrap.io
          server_port: 587
          username: 1cd7d3138a7713
          password: 12e3d9b8934391
          subject: Courseware Version ${{ needs.create_pdfs.outputs.version }} Released
          to: conneradlington+72student@gmail.com
          from: 72(F) Sqn
          # Optional whether this connection use TLS (default is true if server_port is 465)
          # secure: true
          # Optional plain body:
          body: A new set of courseware has been released.
          # Optional HTML body read from file:
          html_body: email.md
          # Optional carbon copy recipients:
          # cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          # bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          # reply_to: luke@example.com
          # Optional unsigned/invalid certificates allowance:
          # ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          # attachments: artifacts/**/*.pdf
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: normal
   
  create_release:
    runs-on: ubuntu-latest
    needs: create_pdfs
    steps:
      
    - uses: actions/download-artifact@v2
      with:
        path: artifacts/
    
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.create_pdfs.outputs.version }}
        tag_name: ${{ needs.create_pdfs.outputs.version }}
        files: artifacts/**/*.pdf
    
